version: '2'
services:
  uid-generator:
    container_name: uid-generator
    build: https://github.com/omar-ahmed42/distributed-uid-snowflake.git#grpc
    ports:
      - '$UID_GENERATOR_PORT:$UID_GENERATOR_PORT'
    env_file:
      - uid-generator.env
    networks:
      - social-media-network

  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "$ZOOKEEPER_HOST_PORT:$ZOOKEEPER_CONTAINER_PORT"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ${ZOOKEEPER_HOST_VOLUME}:/zookeeper
    networks:
      - social-media-network

  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.4
    ports:
      - '$KAFKA_HOST_PORT:$KAFKA_CONTAINER_PORT'
    env_file:
      - kafka.env
    volumes:
    - ${KAFKA_HOST_VOLUME}:/kafka-logs
    networks:
      - social-media-network
    depends_on:
      - zookeeper
    
  cassandra:
    container_name: cassandra
    image: 'cassandra_social_media:latest'
    build:
      context: .
      dockerfile: cassandra.Dockerfile
    environment:
      - CASSANDRA_DC=$CASSANDRA_DC
      - CASSANDRA_ENDPOINT_SNITCH=$CASSANDRA_ENDPOINT_SNITCH
      - CASSANDRA_CLUSTER_NAME=$CASSANDRA_CLUSTER_NAME
      - CASSANDRA_KEYSPACE=${CASSANDRA_KEYSPACE}
    volumes:
      -  ${DOCKER_HOST_CASSANDRA_VOLUMES_DATA}:/var/lib/cassandra
    ports:
      - '$CASSANDRA_PORT'
    networks:
      - social-media-network
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 30s
      retries: 15
      start_period: 60s

  neo4j:
    container_name: neo4j
    image: 'neo4j:latest'
    volumes:
      - ${DOCKER_HOST_NEO4J_VOLUMES_DATA}:/data
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
    ports:
      - '$DOCKER_HOST_NEO4J_BOLT_PORT:$DOCKER_CONTAINER_NEO4J_BOLT_PORT'
      - '$DOCKER_HOST_NEO4J_HTTP_PORT:$DOCKER_CONTAINER_NEO4J_HTTP_PORT'
    networks:
      - social-media-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:${DOCKER_CONTAINER_NEO4J_HTTP_PORT} || exit 1"]

  social_media:
    container_name: social-media
    build:
      dockerfile: Dockerfile.spring-boot
    image: social_media:latest
    ports:
      - "$DOCKER_HOST_SOCIAL_MEDIA_PORT:$DOCKER_CONTAINER_SOCIAL_MEDIA_PORT"
    env_file:
      - social_media.env
    networks:
      - social-media-network
    restart: on-failure
    depends_on:
      uid-generator:
        condition: service_started
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      cassandra:
        condition: service_healthy

  mysql:
    container_name: mysql
    image: 'mysql:latest'
    environment:
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
    ports:
      - '$DOCKER_HOST_MYSQL_PORT:$DOCKER_CONTAINER_MYSQL_PORT'
    networks:
      - social-media-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${DOCKER_CONTAINER_MYSQL_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 160s

  redis:
    container_name: redis
    image: 'redis:latest'
    ports:
      - '$REDIS_PORT'
    networks:
      - social-media-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "$PROMETHEUS_HOST_PORT:$PROMETHEUS_CONTAINER_PORT"
    volumes:
      - $PROMETHEUS_HOST_VOLUME:/etc/prometheus/prometheus.yml
    networks:
      - social-media-network

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "$GRAFANA_HOST_PORT:$GRAFANA_CONTAINER_PORT"
    environment:
      - PROMETHEUS_CONTAINER_PORT=$PROMETHEUS_CONTAINER_PORT
    restart: unless-stopped
    volumes:
      - $GRAFANA_HOST_VOLUME:/etc/grafana/provisioning/datasources
    networks:
      - social-media-network

networks:
  social-media-network:
    driver: bridge